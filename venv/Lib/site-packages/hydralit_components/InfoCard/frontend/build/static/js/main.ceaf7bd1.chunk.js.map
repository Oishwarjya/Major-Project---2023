{"version":3,"sources":["InfoCard.tsx","index.tsx"],"names":["InfoCard","renderData","useStreamlit","title","args","contents","bar_value","title_text_size","content_text_size","icon_size","comp_key","sttheme","theme","override_theme","icon","key","className","merged_theme","bgcolor","secondaryBackgroundColor","border_color","content_color","textColor","progress_color","primaryColor","title_color","icon_color","setTheme","style","width","ProgressBar","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+LAmGeA,G,YA7FY,WACzB,IAAMC,EAAaC,yBAEnB,GAAkB,MAAdD,EACF,OAAO,KAGT,IAAIE,EAAQF,EAAWG,KAAX,MACRC,EAAWJ,EAAWG,KAAX,QACXE,EAAYL,EAAWG,KAAX,UACZG,EAAkBN,EAAWG,KAAX,gBAClBI,EAAoBP,EAAWG,KAAX,kBACpBK,EAAYR,EAAWG,KAAX,UACVM,EAAWT,EAAWG,KAAX,IACbO,EAAUV,EAAWW,MACnBC,EAAiBZ,EAAWG,KAAX,eACnBU,EAAO,oBAyEX,OAtBI,yBAAKC,IAAKL,EAAUM,UAAU,QAC9B,+BAlDa,WACf,IAWkB,YAXdC,EAAe,CAAC,aAAe,UAAU,QAAW,UAAU,cAAiB,UAAU,eAAkB,UAAU,YAAc,UAAU,WAAa,WAyB9J,OAvBGN,IACDM,EAAaC,QAAUP,EAAQQ,yBAC/BF,EAAaG,aAAeT,EAAQQ,yBACpCF,EAAaI,cAAgBV,EAAQW,UACrCL,EAAaM,eAAiBZ,EAAQa,aACtCP,EAAaQ,YAAcd,EAAQW,UACnCL,EAAaS,WAAaf,EAAQa,cAGjCX,IACDI,EAAaC,QAAb,UAAuBL,EAAeK,eAAtC,QAAiDD,EAAaC,QAC9DD,EAAaG,aAAb,UAA4BP,EAAeO,oBAA3C,QAA2DH,EAAaG,aACxEH,EAAaI,cAAb,UAA6BR,EAAeQ,qBAA5C,QAA6DJ,EAAaI,cAC1EJ,EAAaM,eAAb,UAA8BV,EAAeU,sBAA7C,QAA+DN,EAAaM,eAC5EN,EAAaQ,YAAb,UAA2BZ,EAAeY,mBAA1C,QAAyDR,EAAaQ,YACtER,EAAaS,WAAb,UAA0Bb,EAAea,kBAAzC,QAAuDT,EAAaS,WACpEZ,EAAOD,EAAeC,MAOjB,qBAAuBG,EAAaC,QAC3C,qBAAuBD,EAAaI,cACpC,oBAAsBJ,EAAaG,aACnC,sBAAwBH,EAAaM,eACrC,iBAAmBhB,EACnB,mBAAqBC,EACrB,gBAAkBC,EAClB,sBAAwBH,EAPjB,mBAQaW,EAAaQ,YAC/B,iBAAmBR,EAAaS,WAAa,KAgB1CC,IAEH,2BAAOX,UAAU,gBACf,+BACE,4BACE,wBAAIY,MAAO,CAACC,MAAO,OAAQb,UAAU,yBACnC,uBAAGA,UAAU,eAAeb,IAE9B,wBAAIyB,MAAO,CAACC,MAAO,OAAQb,UAAU,wBACnC,uBAAGA,UAAWF,QAKtB,uBAAGE,UAAU,4BAA4BX,GA3BzB,WAClB,GAAIC,EACF,OACE,yBAAKU,UAAU,iBACX,yBAAKA,UAAU,iBAwBpBc,MCtFPC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.ceaf7bd1.chunk.js","sourcesContent":["import {Streamlit} from \"streamlit-component-lib\"\nimport React, {useState} from \"react\"\nimport { useStreamlit } from \"streamlit-component-lib-react-hooks\"\nimport \"./bootstrap.min.css\"\nimport './custom.css'\n\nconst InfoCard:React.VFC = () => {\n  const renderData = useStreamlit();\n\n  if (renderData == null) {\n    return null\n  }\n\n  let title = renderData.args[\"title\"];\n  let contents = renderData.args['content'];\n  let bar_value = renderData.args['bar_value'];\n  let title_text_size = renderData.args['title_text_size'];\n  let content_text_size = renderData.args['content_text_size'];\n  let icon_size = renderData.args['icon_size'];\n  const comp_key = renderData.args[\"key\"];\n  let sttheme = renderData.theme;\n  const override_theme = renderData.args['theme_override'];\n  let icon = \"fa fa-info-circle\";\n  \n  const setTheme = () => {\n    let merged_theme = {'border_color':'#F0F2F6','bgcolor': '#F0F2F6','content_color': '#FFFFFF','progress_color': '#F63366','title_color':'#FFFFFF','icon_color':'#F63366'};\n\n    if(sttheme) {\n      merged_theme.bgcolor = sttheme.secondaryBackgroundColor;\n      merged_theme.border_color = sttheme.secondaryBackgroundColor;\n      merged_theme.content_color = sttheme.textColor;\n      merged_theme.progress_color = sttheme.primaryColor;\n      merged_theme.title_color = sttheme.textColor;\n      merged_theme.icon_color = sttheme.primaryColor;\n    }\n    \n    if(override_theme){\n      merged_theme.bgcolor = override_theme.bgcolor ?? merged_theme.bgcolor;\n      merged_theme.border_color = override_theme.border_color ?? merged_theme.border_color;\n      merged_theme.content_color = override_theme.content_color ?? merged_theme.content_color;\n      merged_theme.progress_color = override_theme.progress_color ?? merged_theme.progress_color;\n      merged_theme.title_color = override_theme.title_color ?? merged_theme.title_color;\n      merged_theme.icon_color = override_theme.icon_color ?? merged_theme.icon_color;\n      icon = override_theme.icon;\n    }\n\n    // if (override_theme) {\n    //   icon = override_theme.icon;\n    // }\n    \n    return \":root {--bgcolor: \" + merged_theme.bgcolor + \n    \";--content-color: \" + merged_theme.content_color + \n    \";--border-color: \" + merged_theme.border_color + \n    \";--progress-color: \" + merged_theme.progress_color + \n    \";--titlesize: \" + title_text_size + \n    \";--contentsize: \" + content_text_size + \n    \";--iconsize: \" + icon_size + \n    \";--progress-value: \" + bar_value + \"%\" + \n    \";--title-color:\" + merged_theme.title_color\n    + \";--icon-color:\" + merged_theme.icon_color + \";}\";\n  }\n\n  const ProgressBar = () => {\n    if (bar_value) {\n      return (        \n        <div className=\"w3-light-grey\">\n            <div className=\"progressbar\"></div>\n        </div>);\n    }\n  }\n\n  const info_card= () => {\n    return (\n      <div key={comp_key} className=\"card\">\n      <style>\n        {setTheme()}\n      </style>\n      <table className=\"table-format\">\n        <thead>\n          <tr>\n            <th style={{width: \"80%\"}} className=\"header-row card-title\">\n              <p className=\"title-style\">{title}</p>\n            </th>\n            <th style={{width: \"20%\"}} className=\"header-row info-icon\">    \n              <i className={icon}></i>\n            </th>\n          </tr>\n        </thead>\n      </table>\n      <p className='content-row card-content'>{contents}</p>\n      {ProgressBar()}\n    </div>\n    );\n  }\n\n  return info_card();\n\n}\n\nexport default InfoCard","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport InfoCard from \"./InfoCard\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <InfoCard />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}